<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <!--arg name="model" default="$(find erl2)/urdf/robot.xacro" /-->
  
  <arg name="model" default="$(find erl2)/urdf/robot.xacro" />

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" 
	 command="$(find xacro)/xacro --inorder $(arg model)" />
	
  <!-- Start Rviz --> 
   <param name="use_gui" value="True"/>
   <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" ></node>
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> 
   <node name="rviz" pkg="rviz" type="rviz" args="-d $(find erl2)/launch/rviz_robot_config.rviz" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch"> 
    <arg name="paused" value="true"/>
  </include>

<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
   <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model robot -param robot_description -z 0.1"/> 
	
<rosparam file="$(find erl2)/config/motors_config.yaml" command="load" ns="/robot" />
<node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" args="--namespace=/robot
joint_state_controller
joint1_position_controller
joint2_position_controller
joint3_position_controller
joint4_position_controller
rgrip_position_controller
lgrip_position_controller
--shutdown-timeout 3">
</node>

</launch>
